// Generated by CoffeeScript 1.6.2
(function() {
  var JavaScriptPreprocess, fs;

  fs = require("fs");

  module.exports = JavaScriptPreprocess = (function() {
    JavaScriptPreprocess.prototype.brunchPlugin = true;

    JavaScriptPreprocess.prototype.type = 'javascript';

    JavaScriptPreprocess.prototype.extension = 'js';

    function JavaScriptPreprocess(config) {
      this.config = config;
      null;
    }

    JavaScriptPreprocess.prototype.onCompile = function(generatedFiles) {
      var file, regexEndIf, regexExt, regexIf, _i, _len, _results,
        _this = this;

      regexExt = /\.js$/;
      regexIf = /\/\/ #BRUNCH_IF (.*?)\s/;
      regexEndIf = /\/\/ #BRUNCH_ENDIF/;
      _results = [];
      for (_i = 0, _len = generatedFiles.length; _i < _len; _i++) {
        file = generatedFiles[_i];
        _results.push((function(file) {
          var data, endifLength, ifLength, matchEndIf, matchIf, strAfterIf, strBeforeIf, strIfContents, target, targetMatches;

          if (file.path.search(regexExt) >= 0) {
            data = fs.readFileSync(file.path, "utf8");
            while (matchIf = regexIf.exec(data)) {
              matchEndIf = regexEndIf.exec(data);
              if (matchEndIf.index <= matchIf.index) {
                throw new Error('Malformed Brunch preprocess conditional');
              }
              target = matchIf[1];
              if (target === _this.config.buildTarget) {
                targetMatches = true;
              } else {
                targetMatches = false;
              }
              ifLength = '// #BRUNCH_IF '.length + target.length;
              endifLength = '// #BRUNCH_ENDIF'.length;
              if (targetMatches) {
                strBeforeIf = data.substring(0, matchIf.index);
                strIfContents = data.substring(matchIf.index + ifLength, matchEndIf.index);
                strAfterIf = data.substring(matchEndIf.index + endifLength, data.length);
                data = strBeforeIf + strIfContents + strAfterIf;
              } else {
                data = data.substring(0, matchIf.index) + data.substring(matchEndIf.index + endifLength, data.length);
              }
            }
            return fs.writeFileSync(file.path, data);
          }
        })(file));
      }
      return _results;
    };

    return JavaScriptPreprocess;

  })();

}).call(this);
